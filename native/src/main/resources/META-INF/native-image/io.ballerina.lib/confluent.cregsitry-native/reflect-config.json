[
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.ErrorMessage",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.Metadata",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.Rule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.RuleKind",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.RuleMode",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.RuleSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.SchemaTypeConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaRequest",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMetadata",
        "parameterTypes": []
      },
      {
        "name": "getReferences",
        "parameterTypes": []
      },
      {
        "name": "getRuleSet",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSchemaTagsToAdd",
        "parameterTypes": []
      },
      {
        "name": "getSchemaTagsToRemove",
        "parameterTypes": []
      },
      {
        "name": "getSchemaType",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isPropagateSchemaTags",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  }
]
